/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.fpo.network


enum LivestockType {
  o COW
  o BUFFALO
  o BULL
  o SHEEP
  o GOAT
  o POULTRY  
}
enum PumpType {

}

enum LandType {
  o WET
  o DRY
  o GARDEN
  o FALLOW
  o KITCHEN
}

enum IrrigationSource {
  o BORE
  o OPEN_WELL
  o TANK
  o RAIN_FED
}

enum FarmerAssetType {
  o WEEDER
  o TILLER
  o TRACTOR
}

asset Livestock identified by livestockID{
  o String livestockID
  o LivestockType type
  o Integer count
  --> Farmer farmer
}

asset FarmerAsset identified by farmerAssetID {
  o String farmerAssetID
  o FarmerAssetType type
  o Integer count
  --> Farmer farmer
}

asset Land identified by landID {
  o String landID
  o LandType type
  o IrrigationSource IrrigationSource
  o PumpType pumpType
  o Double acreage
  o LandSurvey survey
  --> Farmer farmer
}

concept BankAccount {
  o String bankID
  o String name
  o String branch
  o String accountNumber
  o String ifscCode
}

concept LandSurvey {
  o String zone
  o String sro
  o String village
  o String surveyNumber
}

concept FarmerGroup {
  o String groupName 
  o Address address
}

concept Occupation {
  o String main
  o String secondary
}

concept Income {
  o String main
  o String secondary
}

concept Address {
  o String city optional
  o String country
  o String street optional
  o String zip optional
}

abstract participant Person identified by personID {
  o String personID
  o String name
  o Integer age
  o Address address
  o Boolean isMarried
  o String phone1
  o String phone2
  o String phone3
  o String photo
  o String fatherName
  o String husbandName
}

abstract participant Business identified by businessID {
  o String businessID
  o String name
  o Address address
}


participant Farmer extends Person {
  o String caste
  o String religion
  o Occupation occupation
  o Income income
  o BankAccount bankAccount
}

participant FPOMember extends Person {
}

participant FPO extends Business {
}






/* 
 String
 Double
 Integer
 Long
 DateTime
 Boolean
*/

participant SampleParticipant identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

asset SampleAsset identified by assetId {
  o String assetId
  --> SampleParticipant owner
  o String value
}

transaction SampleTransaction {
  --> SampleAsset asset
  o String newValue
}

event SampleEvent {
  --> SampleAsset asset
  o String oldValue
  o String newValue
}
